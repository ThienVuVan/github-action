## Setup kubeconfig file manually
# Note: please read setup_guide first, especially setup aws credentials

# What is kubeconfig file?
    # Kubeconfig is a configuration file that stores information about K8s clusters, including their API server endpoints, certificates, and authentication information.
    # Kubeconfig can be used to authenticate with EKS clusters, making it a more convenient and secure option than IAM tokens.

# What is context in kubeconfig?
    - a context is a key concept that allows you to define and switch between different Kubernetes clusters, users, and namespaces easily. 
      A context combines three elements:
        - Cluster: The Kubernetes API server to communicate with.
        - User: The credentials used to authenticate with the cluster.
        - Namespace (optional): The default namespace to use when interacting with the cluster.
    - see kubeconfig file sample for more information

1. Remove Existing Kubeconfig Folder:
    $ rm -r ~/.kube

2. Set Environment Variables:
    $ export region_code="eu-west-1"
    $ export cluster_name="poc-cluster"
    $ export account_id="account_id"

3. Retrieve Cluster Endpoint:
    # Obtain the cluster endpoint URL required for communication with the Kubernetes API server.
    $ cluster_endpoint=$(aws eks describe-cluster 
    --region $region_code \
    --name $cluster_name \
    --query "cluster.endpoint" \
    --output text)

4. Get Certificate Authority Data:
    Acquire the base64-encoded Certificate Authority (CA) Certificate data, essential for secure communication with the cluster.
    # certificate_data=$(aws eks describe-cluster \
    --region $region_code \
    --name $cluster_name \
    --query "cluster.certificateAuthority.data" \
    --output text)

    # Save the certificate data to a file named eks.crt for later reference:
    $ aws eks describe-cluster --name $cluster_name \
    --query "cluster.certificateAuthority.data" \
    --output text | base64 --decode > eks.crt

5. Replace all outputs in kubeconfig file example.
